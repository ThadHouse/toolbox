plugins {
//    id 'org.gradle.kotlin.kotlin-dsl'
    id 'java-gradle-plugin'
    id 'groovy'

    // This is a failed attempt to use the dev plugins
//    id("dev.gradleplugins.kotlin-gradle-plugin") version "0.0.21"
}

// The following should be replaced by the dev plugins
//kotlinDslPluginOptions {
//    experimentalWarning.set(false)
//}

gradlePlugin {
    plugins {
        generateGradleApiPlugin {
            id = 'dev.gradleplugins.gradle-api-jar'
            implementationClass = 'dev.gradleplugins.api.GenerateGradleApiJarPlugin'
        }
        generateGradleApiJars {
            id = 'dev.gradleplugins.build.gradle-api-jars'
            implementationClass = 'dev.gradleplugins.api.GradleApiJarGeneratorPlugin'
        }

        publishingPlugin {
            id = 'dev.gradleplugins.experimental.publishing'
            implementationClass = 'dev.gradleplugins.PublishingPlugin'
        }
        publishingBasePlugin {
            id = 'dev.gradleplugins.experimental.publishing-base'
            implementationClass = 'dev.gradleplugins.PublishingBasePlugin'
        }
        idePlugin {
            id = 'dev.gradleplugins.experimental.ide'
            implementationClass = 'dev.gradleplugins.IdePlugin'
        }
        additionalArtifactsPlugin {
            id = 'dev.gradleplugins.experimental.artifacts'
            implementationClass = 'dev.gradleplugins.AdditionalArtifactsPlugin'
        }
        shadedArtifactsPlugin {
            id = 'dev.gradleplugins.experimental.shaded-artifact'
            implementationClass = 'dev.gradleplugins.ShadedArtifactPlugin'
        }
        githubPlugin {
            id = 'dev.gradleplugins.experimental.scm.github'
            implementationClass = 'dev.gradleplugins.GitHubSourceControlManagerPlugin'
        }
        ossLicensePlugin {
            id = 'dev.gradleplugins.experimental.license'
            implementationClass = 'dev.gradleplugins.OpenSourceSoftwareLicensePlugin'
        }
        setupPlugin {
            id = 'dev.gradleplugins.experimental.setup'
            implementationClass = 'dev.gradleplugins.SetupProjectPlugin'
        }
    }
}

//dependencies {
//    implementation('org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61')
//}

// Non dev plugin specific configuration
repositories {
    jcenter()
    gradlePluginPortal()
    maven {
        url = uri('https://repo.gradle.org/gradle/libs-releases')
    }
}

dependencies {
    implementation 'org.gradle:gradle-tooling-api:2.14.1'
    // The tooling API need an SLF4J implementation available at runtime, replace this with any other implementation
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.10'


    implementation 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    implementation 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    implementation 'gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.4.2'
    implementation 'com.gradle.publish:plugin-publish-plugin:0.10.1'
}
