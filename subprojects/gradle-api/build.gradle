/*
 * Copyright 2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.jfrog.bintray.gradle.BintrayExtension
import com.jfrog.bintray.gradle.tasks.BintrayUploadTask
import org.gradle.api.publish.maven.internal.artifact.FileBasedMavenArtifact

plugins {
    id 'dev.gradleplugins.build.gradle-api-jars'
    id 'com.jfrog.bintray'
    id 'maven-publish'
    id 'dev.gradleplugins.experimental.publishing-base'
}

version = null

// Temporary workaround for https://github.com/bintray/gradle-bintray-plugin/issues/229
PublishingExtension publishing = project.extensions.getByType(PublishingExtension)
project.tasks.withType(BintrayUploadTask).configureEach {
    doFirst {
        publishing.publications.withType(MavenPublication).each { publication ->
            File moduleFile = project.buildDir.toPath()
                    .resolve("publications/${publication.name}/module.json").toFile()

            if (moduleFile.exists()) {
                publication.artifact(new FileBasedMavenArtifact(moduleFile) {
                    @Override
                    protected String getDefaultExtension() {
                        return "module"
                    }
                })
            }
        }
    }
}

afterEvaluate {
    extensions.configure(BintrayExtension) { bintray ->
        bintray.publications = publishing.publications.collect { it.name }
        bintray.pkg {
            name = "gradle-api-jars"
            setLabels("gradle", "gradle-api", "gradle-plugins")
            publicDownloadNumbers = false
        }
    }
}
