import com.jfrog.bintray.gradle.tasks.BintrayUploadTask
import org.gradle.api.publish.maven.internal.artifact.FileBasedMavenArtifact

import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'groovy' // for Spock framework
    id 'maven-publish'
    id 'com.jfrog.bintray'
}

description = "Gradle TestKit fixtures for fast and efficient Gradle plugin development."

sourceSets {
    spockSupport {
        groovy {
            srcDir 'src/spock/groovy'
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
    registerFeature('spockSupport') {
        usingSourceSet(sourceSets.spockSupport)
        withSourcesJar()
        withJavadocJar()
    }
}

repositories {
    jcenter()
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // This is tricky as it's a API dependency but isn't published anywhere
    //   Let's put the burden on the user to declare that as well
    //   They should be declaring that dependency anyway as this library is not meant to be used outside of the Gradle plugin development plugins within Gradle runtime.
    //   TODO: This should probably be compileOnly
    compileOnly gradleTestKit()

    // TODO: this is required only if you are using rich console
    api 'net.rubygrapefruit:ansi-control-sequence-util:0.2'

    implementation 'org.apache.commons:commons-lang3:3.9' // For StringUtils
    implementation 'org.hamcrest:hamcrest:2.2'
    api 'com.google.guava:guava:28.2-jre'
    implementation 'org.apache.ant:ant:1.9.13'
    implementation 'org.ow2.asm:asm:6.0'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'junit:junit:4.12'

    def lombokVersion = '1.18.12'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
//    testImplementation project(':spock-test-directory-extension')




    spockSupportApi project(':gradle-fixtures')
    spockSupportApi 'org.codehaus.groovy:groovy-all:2.5.8'

//    spockSupportImplementation 'com.google.guava:guava:28.2-jre'

    spockSupportCompileOnly gradleTestKit()

    // TODO: At some point, we will need make this work with an "older" version of Spock depending on how backward compatible the Gradle plugin development plugins will support.
    spockSupportApi 'org.spockframework:spock-core:1.2-groovy-2.5'
}




publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        mavenLocal()
    }
}

// Temporary workaround for https://github.com/bintray/gradle-bintray-plugin/issues/229
PublishingExtension publishing = project.extensions.getByType(PublishingExtension)
project.tasks.withType(BintrayUploadTask).configureEach {
    doFirst {
        publishing.publications.withType(MavenPublication).each { publication ->
            File moduleFile = project.buildDir.toPath()
                    .resolve("publications/${publication.name}/module.json").toFile()

            if (moduleFile.exists()) {
                publication.artifact(new FileBasedMavenArtifact(moduleFile) {
                    @Override
                    protected String getDefaultExtension() {
                        return "module"
                    }
                })
            }
        }
    }
}

private String resolveProperty(Project project, String envVarKey, String projectPropKey) {
    Object propValue = System.getenv().get(envVarKey);

    if (propValue != null) {
        return propValue.toString();
    }

    propValue = project.findProperty(projectPropKey);
    if (propValue != null) {
        return propValue.toString();
    }

    return null;
}


afterEvaluate {
    bintray {
        user = resolveProperty(project, "BINTRAY_USER", "dev.gradleplugins.bintray.user")
        key = resolveProperty(project, "BINTRAY_KEY", "dev.gradleplugins.bintray.key")
        publications = publishing.publications.collect { it.name }

        publish = true
        override = System.getProperties().containsKey('force')

        pkg {
            repo = 'distributions'
            name = 'dev.gradleplugins:gradle-fixtures'
            desc = project.description
            userOrg = 'gradle-plugins'
            websiteUrl = 'https://nokee.dev'
            issueTrackerUrl = 'https://github.com/gradle-plugins/toolbox/issues'
            vcsUrl = 'https://github.com/gradle-plugins/toolbox.git'
            labels = ['gradle', 'gradle-api', 'gradle-plugins']
            licenses = ['Apache-2.0']
            publicDownloadNumbers = false

            version {
                released = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZ").format(new Date())
                // TODO: Sign artifacts
                gpg {
                    sign = false
                    passphrase = resolveProperty(project, "GPG_PASSPHRASE", "dev.gradleplugins.bintray.gpgPassphrase")
                }
            }
        }
    }
}

tasks.register('release') {
    dependsOn('bintrayUpload')
}