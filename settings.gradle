import groovy.json.JsonSlurper
import groovy.transform.TupleConstructor
import org.gradle.util.VersionNumber

rootProject.name = 'toolbox'

// Gradle APIs
@TupleConstructor
class VersionDownloadInfo {
    def json

    String getVersion() {
        return json.version
    }

    boolean isNotSnapshot() {
        return !json.snapshot
    }

    boolean isNotReleaseCandidate() {
        return !json.version.contains("-rc-")
    }

    boolean isNotMilestone() {
        return !json.version.contains("-milestone-")
    }

    boolean greaterOrEqualTo(String versionString) {
        return VersionNumber.parse(versionString).compareTo(VersionNumber.parse(json.version)) <= 0
    }
}
private Set<String> allGeneralAvailableVersion() {
    def versionInfo = new JsonSlurper().parseText('https://services.gradle.org/versions/all'.toURL().text).collect { new VersionDownloadInfo(it) }
    def result = versionInfo.findAll { it.notSnapshot && it.notReleaseCandidate && it.notMilestone && it.greaterOrEqualTo("5.6") }.collect { it.version }
    result.add('3.5.1')
    result.add('2.14.1')
    return result
}
include('gradle-api')
project(':gradle-api').projectDir = file('subprojects/gradle-api')
allGeneralAvailableVersion().each { version ->
    include("gradle-api:${version}")
    project(":gradle-api:${version}").projectDir = file("subprojects/gradle-api/${version}")
}

// Gradle Fixtures
include('gradle-fixtures')
project(':gradle-fixtures').projectDir = file('subprojects/gradle-fixtures')

//// Plugins
//include('license-gradle-plugin')
//project(':license-gradle-plugin').projectDir = file('subprojects/license-gradle-plugin')
//include('scm-github-gradle-plugin')
//project(':scm-github-gradle-plugin').projectDir = file('subprojects/scm-github-gradle-plugin')

// Plugin developement
include('gradle-plugin-development')
project(':gradle-plugin-development').projectDir = file('subprojects/gradle-plugin-development')
//include('gradle-plugin-development-annotation')
//project(':gradle-plugin-development-annotation').projectDir = file('subprojects/gradle-plugin-development-annotation')
//include('gradle-plugin-development-stubs')
//project(':gradle-plugin-development-stubs').projectDir = file('subprojects/gradle-plugin-development-stubs')
